{% extends "layouts/base.njk" %}

{% block script %}
    {{ super() }}
    <script type="module">
        let prefersReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)");

        function animateValue(obj, start, end, duration) {
            let startTimestamp = null;
            const step = (timestamp) => {
                if (!startTimestamp) startTimestamp = timestamp;
                const progress = Math.min((timestamp - startTimestamp) / duration, 1);
                obj.innerHTML = Math.floor(progress * (end - start) + start);
                if (progress < 1) {
                    window.requestAnimationFrame(step);
                }
            };
            window.requestAnimationFrame(step);
        }

        const listeners = document.getElementById("listeners");
        const streams = document.getElementById("streams");
        const plays = document.getElementById("plays");
        const metrics = [listeners, streams, plays];

        function handleAnimatedStats(entries) {
            entries.map((entry) => {
                if (entry.target === listeners && entry.isIntersecting) {
                    animateValue(entry.target, 0, 22, 1500);
                    statsObserver.unobserve(entry.target);
                } else if (entry.target === streams && entry.isIntersecting) {
                    animateValue(entry.target, 0, 63, 2500);
                    statsObserver.unobserve(entry.target);
                } else if (entry.target === plays && entry.isIntersecting) {
                    animateValue(entry.target, 0, 8, 500);
                    statsObserver.unobserve(entry.target);
                }
            });
        }

        const statsOptions = {
            root: null,
            rootMargin: "0px",
            threshold: 1.0,
        };

        const statsObserver = new IntersectionObserver(handleAnimatedStats, statsOptions);
        if (!prefersReducedMotion.matches) {
            metrics.forEach((metric) => (metric.innerHTML = "0"));
            metrics.forEach((metric) => statsObserver.observe(metric));
        }
    </script>
{% endblock %}

{% block content %}
    <header class="flex-center col">
        {% include "partials/logo.njk" %}
        <h1 class="center">This Is Front Royal</h1>
        <figure class="featured-image">
            <picture>
                <source srcset="/assets/img/tw-vid-1.webp" type="image/webp"/>
                <img
                        src="/assets/img/tw-vid-1.jpg"
                        width="1100"
                        height="619"
                        loading="eager"
                        decoding="async"
                        alt="From left, Coleman, Justin, and Troy, together recording a music video"/>
            </picture>
        </figure>
        <section class="full">
            {% include "partials/stats.njk" %}
            <div class="wrapper">{% include "partials/socials.njk" %}</div>
        </section>
    </header>
    <main>
        <div class="wrapper" data-constrain="more">
            <h2>Who Is Front Royal?</h2>
            <article class="biography__long">{% include "partials/bio-long.njk" %}</article>
            <details-utils close-esc animate>
                <details class="biography__short">
                    <summary>Did you skip all that? Click me for the short version.</summary>
                    <div class="content">{% include "partials/bio-short.njk" %}</div>
                </details>
            </details-utils>
        </div>
        <section class="skewed-background" id="contact">
            <div class="wrapper" data-constrain="more">
                <section class="full content">
                    <h2 class="center">Use This Form To Talk To Us</h2>
                    {% include "partials/contact.njk" %}
                </section>
            </div>
        </section>
    </main>
{% endblock %}

{% block style %}
    {{ super() }}
    <style>
        header {
            margin-bottom: 5ch;
        }

        h1 {
            margin-bottom: 0;
        }

        .featured-image {
            font-size: var(--step--2);
            margin-inline: 0;
        }

        .featured-image img {
            max-inline-size: 100%;
        }

        .icons img {
            filter: invert(100%);
        }

        .icons img:hover {
            filter: invert(100%) contrast(2%);
        }

        .statistics {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .stat-box {
            flex: 1;
        }

        .metric {
            font-family: var(--headings);
            font-size: var(--step-2);
            font-weight: 700;
            margin: 0;
        }

        .biography__short summary {
            cursor: pointer;
            font-family: var(--headings);
            font-size: var(--step-1);
            font-weight: 700;
            list-style: none;
            text-decoration: underline;
        }

        @media only screen and (min-width: 768px) {
            .statistics {
                flex-direction: row;
            }
        }
    </style>
{% endblock %}
