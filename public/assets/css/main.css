@font-face {
  font-family: "Bebas Neue";
  src: url("/assets/fonts/Bebas-Neue.woff2") format("woff2");
  font-style: normal;
  font-weight: 400;
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC,
    U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

html {
  --mainGap: 3ex;
  --smGap: 1.5ex;
  --fallbackFonts: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell,
    "Helvetica Neue", sans-serif;
  --headings: "Bebas Neue", var(--fallbackFonts);
  --body: var(--fallbackFonts);
  --caps: "Bebas Neue", var(--fallbackFonts);
  --black: #0a0a0a;
  --white: #f5f5f5;
  --blue: #7fcacd;
  --yellow: #e2b33c;
  --grey: #7a7a7a;
  --overlay: rgba(0, 0, 0, 0.3);
  --step--2: clamp(0.9113rem, 0.8922rem + 0.0951vw, 0.96rem);
  --step--1: clamp(1.0938rem, 1.0523rem + 0.2073vw, 1.2rem);
  --step-0: clamp(1.3125rem, 1.2393rem + 0.3659vw, 1.5rem);
  --step-1: clamp(1.575rem, 1.4579rem + 0.5854vw, 1.875rem);
  --step-2: clamp(1.89rem, 1.7129rem + 0.8854vw, 2.3438rem);
  --step-3: clamp(2.2681rem, 2.0098rem + 1.2915vw, 2.93rem);
  --step-4: clamp(2.7219rem, 2.355rem + 1.8341vw, 3.6619rem);
  --step-5: clamp(3.2656rem, 2.7537rem + 2.5598vw, 4.5775rem);
  scroll-behavior: smooth;
}

body {
  background: var(--black);
  color: var(--white);
  min-block-size: 100vh;
  inline-size: 100%;
  display: flex;
  line-height: 1.35;
  flex-direction: column;
  font-size: var(--step--1);
  font-family: var(--body);
}

h1,
h2,
h3,
h4 {
  margin-top: 0;
  font-family: var(--headings);
}

h1 {
  font-size: var(--step-3);
}

h2 {
  font-size: var(--step-2);
}

h3 {
  font-size: var(--step-1);
}

h4 {
  font-size: var(--step-0);
}

.font-lg-5 {
  font-size: var(--step-5);
}

.font-lg-4 {
  font-size: var(--step-4);
}

.font-lg-3 {
  font-size: var(--step-3);
}

.font-lg-2 {
  font-size: var(--step-2);
}

.font-lg-1 {
  font-size: var(--step-1);
}

.font-base {
  font-size: var(--step-0);
}

img {
  display: block;
  max-inline-size: 100%;
  margin: auto;
  block-size: auto;
}

img[height] {
  block-size: auto;
}

.wrapper {
  inline-size: 95%;
  max-inline-size: 1600px;
  margin: auto;
}

.wrapper[data-constrain="some"] {
  max-inline-size: 1300px !important;
}

.wrapper[data-constrain="more"] {
  max-inline-size: 1100px !important;
}

.wrapper[data-constrain="most"] {
  max-inline-size: 600px !important;
}

.flex {
  display: flex;
}

.col {
  flex-direction: column;
}

.full {
  inline-size: 100%;
}

.grid {
  display: grid;
  gap: var(--mainGap);
}

.two-col {
  grid-template-columns: repeat(2, 1fr);
}

.three-col {
  grid-template-columns: repeat(3, 1fr);
}

.fluid-col {
  grid-template-columns: repeat(auto-fit, minmax(20em, 1fr));
}

.place-center {
  place-items: center;
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.wrap {
  flex-wrap: wrap;
}

.center {
  text-align: center;
}

.italic {
  font-style: italic;
}

.bold {
  font-weight: 700;
}

.smaller {
  font-size: var(--step--1);
}

.skewed-background {
  position: relative;
  padding: var(--skew-padding);
}

.skewed-background::before {
  position: absolute;
  top: -10px;
  content: "";
  inline-size: 100%;
  block-size: 100%;
  background: var(--skew-color);
  transform: skewy(var(--skew-direction));
}

.skewed-background .content {
  position: relative;
  color: var(--skew-text);
  background: var(--skew-color);
}

a {
  color: var(--blue);
}

a:hover {
  color: var(--yellow);
}

.button {
  display: inline-block;
  padding: 1ch 2ch;
  background: var(--black);
  color: var(--white);
  border-radius: 6px;
  text-decoration: none;
  transition: 0.3s ease-out;
  font-size: var(--step-1);
  font-family: var(--caps);
}

.button:hover {
  background: var(--yellow);
  color: var(--black);
}

a.animated-link {
  position: relative;
  text-decoration: none;
}

a.animated-link::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  block-size: 0.06em;
  inline-size: 100%;
  background-color: currentColor;
  transition: transform 400ms ease-out;
}

a.animated-link:hover::before {
  transform: scaleX(0);
  transform-origin: right;
}

a.animated-link::before {
  transform: scaleX(1);
  transform-origin: left;
}

*:not(:defined) {
  display: block;
}

/* Create equal spacing between elements in a flow context without setting display */
.flow > * + * {
  margin-block-start: var(--flow-space, 1.45em);
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
  }

  .animated-content {
    opacity: 1;
    transform: translateY(0);
  }

  a.animated-link {
    text-decoration: underline;
  }

  a.animated-link::before {
    inline-size: 0;
  }
}
